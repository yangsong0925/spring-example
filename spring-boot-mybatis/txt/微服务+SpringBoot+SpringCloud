名词：
	SOA (Service-Orientted-Architecture) 面向服务的架构。
微服务：

	微服务架构 SOA 区别：
		微服务架构：
			一个系统被拆分成多个服务，粒度细。
			团队级，自底向上开展实施。
			无集中式总线，松散的服务架构。
			集成方式简单(HTTP/REST/JSON)。
			服务能独立部署。
		SOA:
			服务由多个子系统组成，粗粒度。
			企业级，自顶向下开展实施。
			企业服务总线，集中式的服务架构。
			集成方式复杂(ESB/WS/SOAP)。
			服务相互依赖，无法独立部署。

	微服务架构组件：
		服务注册中心：注册系统中所有服务的地方。
		服务注册：服务提供方将自己调用地址注册到服务注册中心，让服务调用方能够方便的找到自己。
		服务发现：服务调用方从服务注册中心找到自己需要调用服务的地址。
		负载均衡：服务提供方一般以多实例的形式提供服务，使用负载均衡能够让服务调用方连接到合适的服务节点。
		服务容错：通过断路器（也称熔断器）等一系列的服务保护机制，保证服务调用者在调用异常服务时快速地返回结果，避免大量的同步等待。
		服务网关：也称为 API 网关，是服务调用的唯一入口，可以在这个组件中实现用户鉴权、动态路由、灰度发布、负载限流等功能。
		分布式配置中心：将本地化的配置信息（properties、yml、yaml等）注册到配置中心，实现程序包在开发、测试、生产环境的无差别性，方便程序包的迁移。

	微服务技术：
		服务的注册与发现：Spring cloud Eureka、Apache Zookeeper、Consul、Etcd 和 Dubbo;
		负载均衡：Spring Cloud Ribbon 和 Dubbo;
		服务容错：Hystrix,Spring Cloud 子项目中包含 Spring Cloud Hystrix；
		分布式配置中心：Spring Cloud Config；
		调试：Swagger，REST API文档生成工具之一；
		部署：Docker打包和部署微服务，Docker是一个开源的应用容器引擎，具有可移植性、启动速度快特点。


